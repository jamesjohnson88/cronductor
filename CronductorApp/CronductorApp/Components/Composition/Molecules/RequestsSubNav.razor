@inject NavigationManager Navigation

<!-- Sticky Sub Navigation for Requests Page -->
<nav class="requests-sub-nav">
    <div class="tabs is-boxed">
        <ul>
            <li class="@(IsActive("/requests/scheduled") || IsActive("/requests") ? "is-active" : "")">
                <a href="/requests/scheduled">
                    <span class="icon is-small">
                        <i class="fas fa-clock"></i>
                    </span>
                    <span>Scheduled Requests</span>
                </a>
            </li>
            <li class="@(IsActive("/requests/history") ? "is-active" : "")">
                <a href="/requests/history">
                    <span class="icon is-small">
                        <i class="fas fa-history"></i>
                    </span>
                    <span>Request History</span>
                </a>
            </li>
            <li class="@(IsActive("/requests/live") ? "is-active" : "")">
                <a href="/requests/live">
                    <span class="icon is-small">
                        <i class="fas fa-broadcast-tower"></i>
                    </span>
                    <span>Live Requests</span>
                </a>
            </li>
        </ul>
    </div>
</nav>

@code {
    private bool IsActive(string route)
    {
        var currentUri = Navigation.ToBaseRelativePath(Navigation.Uri);
        
        // Handle the default route case
        if (route == "/requests/scheduled" && (currentUri == "requests" || currentUri == "requests/"))
        {
            return true;
        }
        
        // Remove leading slash for comparison
        var routeWithoutSlash = route.TrimStart('/');
        return currentUri.Equals(routeWithoutSlash, StringComparison.OrdinalIgnoreCase);
    }
}
